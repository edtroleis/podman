version: '3.8'

services:
  webapp:
    build:
      context: .
      dockerfile: Containerfile
    container_name: webapp
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://webapp:secret@db:5432/webapp_db
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - webapp-network

  db:
    image: docker.io/postgres:15-alpine
    container_name: webapp_db
    environment:
      - POSTGRES_DB=webapp_db
      - POSTGRES_USER=webapp
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    networks:
      - webapp-network
    ports:
      - "5432:5432"

  redis:
    image: docker.io/redis:7-alpine
    container_name: webapp_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - webapp-network
    ports:
      - "6379:6379"

  nginx:
    image: docker.io/nginx:alpine
    container_name: webapp_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - webapp
    restart: unless-stopped
    networks:
      - webapp-network

volumes:
  postgres_data:
  redis_data:

networks:
  webapp-network:
    driver: bridge
