version: '3.8'

services:
  web-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: volume-demo-web
    ports:
      - "8080:80"
    volumes:
      # Named volume for logs (managed by Podman)
      - web-logs:/var/log/nginx
      # Bind mount for content (allows live editing)
      - ./content:/var/www/html:Z
      # Bind mount for config (read-only)
      - ./nginx.conf:/etc/nginx/nginx.conf:ro,Z
    networks:
      - demo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  log-viewer:
    image: registry.access.redhat.com/ubi9/ubi:latest
    container_name: volume-demo-logs
    volumes:
      - web-logs:/logs:ro
    command: >
      bash -c "
        echo 'Log viewer started - monitoring nginx logs...'
        while true; do
          if [ -f /logs/access.log ]; then
            tail -f /logs/access.log
          else
            echo 'Waiting for access.log file...'
            sleep 5
          fi
        done
      "
    depends_on:
      - web-app
    networks:
      - demo-network

  data-backup:
    image: registry.access.redhat.com/ubi9/ubi:latest
    container_name: volume-demo-backup
    volumes:
      - web-logs:/source:ro
      - ./backups:/backup:Z
    command: >
      bash -c "
        echo 'Creating backup of volume data...'
        mkdir -p /backup
        tar czf /backup/web-logs-backup-$(date +%Y%m%d-%H%M%S).tar.gz -C /source . 2>/dev/null || echo 'No data to backup yet'
        echo 'Backup completed!'
      "
    depends_on:
      - web-app
    networks:
      - demo-network
    profiles:
      - backup

volumes:
  web-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/podman-volume-logs

networks:
  demo-network:
    driver: bridge